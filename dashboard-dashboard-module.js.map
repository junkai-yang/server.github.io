{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-pipes.js","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/content/content.component.ts","./src/app/dashboard/content/content.component.html","./src/app/dashboard/dashboard.module.ts","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-modal.js","./src/app/dashboard/graph-display/graph-display.component.ts","./src/app/dashboard/graph-display/graph-display.component.html","./node_modules/screenfull/dist/screenfull.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmG;AAC4C;AACpG;AACG;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH,gCAAgC,wEAAkB,EAAE,sDAAsD,sCAAsC,EAAE,sDAAsD;AACxM,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iDAAiD,6BAA6B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,2BAA2B;AACzI,wBAAwB,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,2BAA2B,EAAE,8CAA8C;AACzM;AACA,KAAK;AACL;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,gCAAgC,EAAE,EAAE,QAAQ,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,kFAAoB;AAC7C;AACA;AACA;AACA;A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AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oEAAO;AAC3B,QAAQ,kEAAK,eAAe,kEAAK,GAAG;AACpC,QAAQ,kEAAK,UAAU,kEAAK,GAAG;AAC/B,QAAQ,uEAAU,eAAe,oEAAO,SAAS,kEAAK,GAAG;AACzD,QAAQ,uEAAU,yBAAyB,oEAAO,QAAQ,kEAAK,GAAG;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,obAAob;AAC/b;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,oEAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAY;AACrD,kCAAkC,0DAAY;AAC9C,mCAAmC,0DAAY;AAC/C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gFAAgB;AACjD;AACA;AACA,uCAAuC,4BAA4B,KAAK,2BAA2B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,+CAA+C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,kEAAuB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,CAAC,yEAAsB,GAAG,+DAAwB,gBAAgB,+DAAwB,aAAa,+DAAwB,UAAU;AACjhB,mCAAmC,+DAAwB,EAAE,+CAA+C,wEAAiC,GAAG;AAChJ;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK,OAAO,yEAAe,EAAE;AAC7B,KAAK,qBAAqB;AAC1B,KAAK,kBAAkB;AACvB,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,+BAA+B,0DAAY;AAC3C,oCAAoC,gEAAS;AAC7C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,oDAAoD,+DAAwB,CAAC,iEAAoB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,kEAAuB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,CAAC,yEAAsB,GAAG,+DAAwB,gBAAgB,+DAAwB,CAAC,yDAAQ,MAAM,+DAAwB,CAAC,2FAAqB,MAAM;AACpmB,wCAAwC,+DAAwB,EAAE,2JAA2J;AAC7N,QAAQ,yDAAkB,CAAC,mEAAe;AAC1C,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,gJAAgJ;AACvJ,QAAQ,qEAA8B,+HAA+H,qCAAqC,EAAE,8HAA8H,oCAAoC,EAAE;AAChX,QAAQ,wDAAiB,sFAAsF,qCAAqC,EAAE,qFAAqF,wBAAwB,EAAE;AACrQ,KAAK;AACL,QAAQ,qEAA8B;AACtC,QAAQ,wDAAiB;AACzB,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,YAAY,iEAAiE,oDAAoD,wEAAiC,26BAA26B;AACplC,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,6FAA6F,0BAA0B,EAAE;AAClJ,QAAQ,oDAAa;AACrB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB,UAAU,yDAAkB;AACtD,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,2BAA2B,SAAS,wDAAc,EAAE,wDAAc,EAAE,qDAAW,EAAE,gGAAkC,EAAE,mEAAsB,EAAE,0FAAsC,EAAE,mEAAsB,yBAAyB,uEAAyB,EAAE,wEAAuB,EAAE,EAAE,sBAAsB,SAAS,oEAAuB,EAAE,EAAE,2BAA2B,gDAAgD,EAAE;AACxa;AACA,KAAK,OAAO,iEAAa,EAAE;AAC3B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK,OAAO,yEAAe,EAAE;AAC7B,KAAK,qBAAqB;AAC1B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,yDAAQ,IAAI,GAAG;AAC9F,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,2FAAqB,IAAI;AACrG;AACA;AACA,oBAAoB,OAAO,uDAAS,SAAS,mEAAe,GAAG,eAAe,IAAI;AAClF,uBAAuB,OAAO,uDAAS,0BAA0B,eAAe,IAAI;AACpF,uBAAuB,OAAO,oDAAM,EAAE;AACtC,mBAAmB,OAAO,oDAAM,EAAE;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,6CAA6C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,kEAAuB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,CAAC,yEAAsB,GAAG,+DAAwB,gBAAgB,+DAAwB,CAAC,yDAAQ,MAAM,+DAAwB,CAAC,2FAAqB,MAAM;AAC/hB,iCAAiC,+DAAwB,EAAE,qIAAqI;AAChM,QAAQ,yDAAkB,CAAC,mEAAe;AAC1C,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,yIAAyI;AAChJ,QAAQ,qEAA8B,wHAAwH,qCAAqC,EAAE,uHAAuH,oCAAoC,EAAE;AAClW,QAAQ,wDAAiB,+EAA+E,qCAAqC,EAAE,8EAA8E,wBAAwB,EAAE;AACvP,KAAK;AACL,QAAQ,qEAA8B;AACtC,QAAQ,wDAAiB;AACzB,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,6CAA6C,wEAAiC,wnBAAwnB;AAC7sB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,sFAAsF,0BAA0B,EAAE;AAC3I,QAAQ,oDAAa;AACrB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB,UAAU,yDAAkB;AACtD,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,2BAA2B,SAAS,wDAAc,EAAE,wDAAc,EAAE,qDAAW,EAAE,mEAAsB,wEAAwE,EAAE,sBAAsB,SAAS,oEAAuB,EAAE,EAAE,2BAA2B,gDAAgD,EAAE;AAC/T;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK,OAAO,yEAAe,EAAE;AAC7B,KAAK,qBAAqB;AAC1B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,yDAAQ,IAAI,GAAG;AAC9F,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,2FAAqB,IAAI;AACrG;AACA;AACA,oBAAoB,OAAO,uDAAS,SAAS,mEAAe,GAAG,eAAe,IAAI;AAClF,uBAAuB,OAAO,uDAAS,0BAA0B,eAAe,IAAI;AACpF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC,6BAA6B,4CAAO;AACpC;AACA,kBAAkB,6DAAM,oEAAoE,2DAAI;AAChG;AACA;AACA;AACA,8CAA8C,0DAAY;AAC1D;AACA;AACA,SAAS;AACT;AACA,kBAAkB,6DAAM,mEAAmE,2DAAI;AAC/F;AACA;AACA;AACA,SAAS;AACT,8CAA8C,2DAAI;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,6DAAM;AACxB;AACA;AACA;AACA,kCAAkC,6DAAM;AACxC,iBAAiB,6EAAc;AAC/B,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,0DAAY;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6DAAM,wCAAwC,2DAAI;AACpE;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAS;AACxB,6BAA6B,yDAAyD;AACtF,gCAAgC,+CAA+C;AAC/E;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA,oBAAoB,yEAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4CAAO;AACpD,6BAA6B,kDAAK,iFAAiF,gEAAS;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,YAAY,sEAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY,GAAG,0BAA0B;AAC9G;AACA;AACA,qBAAqB;AACrB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAa;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAQ;AACjC;AACA;AACA,iBAAiB,UAAU,+DAAU,wBAAwB;AAC7D,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oCAAoC,mEAAe;AACnD;AACA;AACA;AACA;AACA;AACA,8CAA8C,yDAAW;AACzD,oDAAoD,kEAAc,gCAAgC,gDAAgD;AAClJ;AACA,iBAAiB,wEAAQ;AACzB;AACA,wEAAwE,mEAAe;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAQ;AACvB;AACA,yBAAyB,0CAA0C;AACnE,SAAS;AACT;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,sDAAe,CAAC,4DAAc,GAAG,sDAAe,CAAC,sDAAe,GAAG,sDAAe,CAAC,yEAAsB,GAAG,sDAAe,sBAAsB,sDAAe,CAAC,gEAAsB,MAAM;AACzR,uBAAuB,gEAAyB,EAAE,sDAAsD;AACxG;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,yEAAe,EAAE;AAC7B,KAAK,qCAAqC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAClF,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,+DAAwB,CAAC,yDAAkB,GAAG;AACrK,+BAA+B,+DAAwB,EAAE,uGAAuG;AAChK;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,iBAAiB,+DAAwB,CAAC,yDAAkB,GAAG;AAC3M,8BAA8B,+DAAwB,EAAE,oGAAoG;AAC5J;AACA,KAAK,iCAAiC,OAAO,sDAAQ,EAAE,GAAG;AAC1D,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,iBAAiB,+DAAwB,CAAC,yDAAkB,GAAG;AACxM,6BAA6B,+DAAwB,EAAE,iGAAiG;AACxJ;AACA,KAAK,iCAAiC,OAAO,sDAAQ,EAAE,GAAG;AAC1D,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iFAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY,2BAA2B,qDAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,kBAAkB,+DAAwB,CAAC,8DAAuB,GAAG;AACnP,wBAAwB,+DAAwB,EAAE,iIAAiI;AACnL,QAAQ,4DAAqB,qCAAqC,yDAAW;AAC7E,QAAQ,4DAAqB,sCAAsC,yDAAW;AAC9E,QAAQ,4DAAqB,uCAAuC,yDAAW;AAC/E,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM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A;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,OAAO;AACf;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,GAAG;AACH,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;;;;;;;;;;;;;ACvLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACiJ;AAC3I;AACuF;AAClE;AACO;AACqC;AACxC;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACQ;AACC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6CAA6C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,+BAA+B;AACrG,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oCAAoC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,sDAAe,CAAC,wDAAQ,GAAG;AACpH,sBAAsB,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,4CAA4C;AAClL;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B;AACA;AACA,4CAA4C,WAAW,GAAG,QAAQ;AAClE;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B,GAAG,SAAS;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,8BAA8B,uDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,0DAAG,+CAA+C,mEAAY,oBAAoB,6DAAM,yCAAyC,0DAAG;AACrM;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4EAAc;AACvD;AACA;AACA;AACA;AACA;AACA,yCAAyC,uDAAC,eAAe,uDAAC,iBAAiB,0DAAI,eAAe,0DAAI;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,usEAAsE,wCAAwC,sDAAe,CAAC,8DAAe,GAAG;AAChJ,6BAA6B,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,CAAC,8DAAQ,GAAG,EAAE,mDAAmD;AAC9M;AACA,KAAK,OAAO,8DAAQ;AACpB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,8DAAe,EAAE,EAAE,EAAE,QAAQ,EAAE;AACrmBAAmB,sBAAsB;AACzhF,8BAA8B,MAAM;AACpC,0BAA0B,MAAM;AAChC,uBAAuB,oBAAoB;AAC3C;AACA,qDAAqD,MAAM;AAC3D,6EAA6E,MAAM;AACnF,0CAA0C,MAAM;AAChD;AACA;AACA,iEAAiE,MAAM;AACvE,oFAAoF,MAAM;AAC1F,0CAA0C,MAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,wBAAwB,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AACpM,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,wBAAwB,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChP;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,6BAA6B,GAAG,OAAO,oDAAa,EAAE,GAAG;AACxF,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,wBAAwB,0BAA0B,mFAAqB,QAAQ;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD,4BAA4B,qBAAqB,mFAAqB,QAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,oBAAoB,+DAAwB,CAAC,wDAAQ,GAAG;AACnN,oBAAoB,+DAAwB,EAAE,qEAAqE,gGAAgG,yCAAyC,kEAA2B,GAAG;AAC1R;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA,eAAe,OAAO,mDAAK,2BAA2B;AACtD,mBAAmB,OAAO,mDAAK,sCAAsC;AACrE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,yBAAyB,GAAG;AACxF,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzaAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAAc;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,yBAAyB,wEAAkB,EAAE,+CAA+C,+BAA+B,EAAE,+CAA+C;AAC5K,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,gDAAgD,sDAAe,wBAAwB,sDAAe,CAAC,oDAAa,GAAG,sDAAe,oBAAoB,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,gCAAgC;AAC1T,qCAAqC,wEAAkB,EAAE,2DAA2D,yCAAyC,8DAAQ,wBAAwB,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,oBAAoB,8DAAQ,CAAC,wDAAQ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DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,sBAAsB,GAAG,OAAO,sEAAsB,EAAE,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,GAAG;AACpJ,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4DAAc;AACxD;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA;AACA,yBAAyB,4EAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AA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","file":"dashboard-dashboard-module.js","sourcesContent":["import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ɵɵdefineInjectable, Injectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\nMutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\nContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() { return this._debounce; }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        var _a;\n        (_a = this._currentSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nclass ObserversModule {\n}\nObserversModule.ɵfac = function ObserversModule_Factory(t) { return new (t || ObserversModule)(); };\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { CommonModule } from '@angular/common';\nimport { Pipe, NgModule } from '@angular/core';\nimport { sum, isNumberFinite, toDecimal, isNil } from 'ng-zorro-antd/core/util';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nclass NzAggregatePipe {\n    transform(value, method) {\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 0) {\n            return undefined;\n        }\n        switch (method) {\n            case 'sum':\n                return sum(value);\n            case 'avg':\n                return sum(value) / value.length;\n            case 'max':\n                return Math.max(...value);\n            case 'min':\n                return Math.min(...value);\n            default:\n                throw Error(`Invalid Pipe Arguments: Aggregate pipe doesn't support this type`);\n        }\n    }\n}\nNzAggregatePipe.ɵfac = function NzAggregatePipe_Factory(t) { return new (t || NzAggregatePipe)(); };\nNzAggregatePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzAggregate\", type: NzAggregatePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAggregatePipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzAggregate'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBytesPipe {\n    transform(input, decimal = 0, from = 'B', to) {\n        if (!(isNumberFinite(input) && isNumberFinite(decimal) && decimal % 1 === 0 && decimal >= 0)) {\n            return input;\n        }\n        let bytes = input;\n        let unit = from;\n        while (unit !== 'B') {\n            bytes *= 1024;\n            unit = NzBytesPipe.formats[unit].prev;\n        }\n        if (to) {\n            const format = NzBytesPipe.formats[to];\n            const result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n            return NzBytesPipe.formatResult(result, to);\n        }\n        for (const key in NzBytesPipe.formats) {\n            if (NzBytesPipe.formats.hasOwnProperty(key)) {\n                const format = NzBytesPipe.formats[key];\n                if (bytes < format.max) {\n                    const result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n                    return NzBytesPipe.formatResult(result, key);\n                }\n            }\n        }\n    }\n    static formatResult(result, unit) {\n        return `${result} ${unit}`;\n    }\n    static calculateResult(format, bytes) {\n        const prev = format.prev ? NzBytesPipe.formats[format.prev] : undefined;\n        return prev ? bytes / prev.max : bytes;\n    }\n}\nNzBytesPipe.ɵfac = function NzBytesPipe_Factory(t) { return new (t || NzBytesPipe)(); };\nNzBytesPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzBytes\", type: NzBytesPipe, pure: true });\nNzBytesPipe.formats = {\n    B: { max: 1024 },\n    kB: { max: Math.pow(1024, 2), prev: 'B' },\n    KB: { max: Math.pow(1024, 2), prev: 'B' },\n    MB: { max: Math.pow(1024, 3), prev: 'kB' },\n    GB: { max: Math.pow(1024, 4), prev: 'MB' },\n    TB: { max: Number.MAX_SAFE_INTEGER, prev: 'GB' }\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzBytesPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzBytes'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzToCssUnitPipe {\n    transform(value, defaultUnit = 'px') {\n        const absoluteLengthUnit = ['cm', 'mm', 'Q', 'in', 'pc', 'pt', 'px'];\n        const relativeLengthUnit = ['em', 'ex', 'ch', 'rem', '1h', 'vw', 'vh', 'vmin', 'vmax'];\n        const percentagesUnit = ['%'];\n        const listOfUnit = [...absoluteLengthUnit, ...relativeLengthUnit, ...percentagesUnit];\n        let unit = 'px';\n        if (listOfUnit.some(u => u === defaultUnit)) {\n            unit = defaultUnit;\n        }\n        return typeof value === 'number' ? `${value}${unit}` : `${value}`;\n    }\n}\nNzToCssUnitPipe.ɵfac = function NzToCssUnitPipe_Factory(t) { return new (t || NzToCssUnitPipe)(); };\nNzToCssUnitPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzToCssUnit\", type: NzToCssUnitPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzToCssUnitPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzToCssUnit'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzEllipsisPipe {\n    transform(value, length, suffix = '') {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        const len = typeof length === 'undefined' ? value.length : length;\n        if (value.length <= len) {\n            return value;\n        }\n        return value.substring(0, len) + suffix;\n    }\n}\nNzEllipsisPipe.ɵfac = function NzEllipsisPipe_Factory(t) { return new (t || NzEllipsisPipe)(); };\nNzEllipsisPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzEllipsis\", type: NzEllipsisPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzEllipsisPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzEllipsis'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSafeNullPipe {\n    transform(value, replace = '') {\n        if (isNil(value)) {\n            return replace;\n        }\n        return value;\n    }\n}\nNzSafeNullPipe.ɵfac = function NzSafeNullPipe_Factory(t) { return new (t || NzSafeNullPipe)(); };\nNzSafeNullPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzSafeNull\", type: NzSafeNullPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzSafeNullPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzSafeNull'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSanitizerPipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value, type = 'html') {\n        switch (type) {\n            case 'html':\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'resourceUrl':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            default:\n                throw new Error(`Invalid safe type specified`);\n        }\n    }\n}\nNzSanitizerPipe.ɵfac = function NzSanitizerPipe_Factory(t) { return new (t || NzSanitizerPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };\nNzSanitizerPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzSanitizer\", type: NzSanitizerPipe, pure: true });\nNzSanitizerPipe.ctorParameters = () => [\n    { type: DomSanitizer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzSanitizerPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzSanitizer'\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTrimPipe {\n    // TODO(chensimeng) trimEnd, trimStart\n    transform(text) {\n        return text.trim();\n    }\n}\nNzTrimPipe.ɵfac = function NzTrimPipe_Factory(t) { return new (t || NzTrimPipe)(); };\nNzTrimPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzTrim\", type: NzTrimPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTrimPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzTrim'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst pipes = [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe];\nclass NzPipesModule {\n}\nNzPipesModule.ɵfac = function NzPipesModule_Factory(t) { return new (t || NzPipesModule)(); };\nNzPipesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzPipesModule });\nNzPipesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzPipesModule, { declarations: function () { return [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzPipesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [pipes],\n                declarations: [pipes]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAggregatePipe, NzBytesPipe, NzEllipsisPipe, NzPipesModule, NzSafeNullPipe, NzSanitizerPipe, NzToCssUnitPipe, NzTrimPipe };\n\n//# sourceMappingURL=ng-zorro-antd-pipes.js.map","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ContentComponent} from \"./content/content.component\";\r\nimport {GraphDisplayComponent} from \"./graph-display/graph-display.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'content',\r\n    component: ContentComponent,\r\n  },\r\n  {\r\n    path: 'test',\r\n    component: GraphDisplayComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'content'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {GraphService} from \"../../graph/graph.service\";\r\nimport * as screenfull from \"screenfull\";\r\nimport { Screenfull } from \"screenfull\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.scss']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n  param_WordCloud;\r\n  collapse_line = true;\r\n  collapse_word = true;\r\n  collapse_force = true;\r\n  collapse_map = true;\r\n\r\n  isVisible = false;\r\n\r\n  constructor(private service:GraphService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    setInterval(()=>{\r\n      const target = document.getElementsByClassName('scene-container')[0]\r\n      const sf = <Screenfull>screenfull\r\n      if (!sf.isFullscreen) {\r\n        this.service.nodeSize.next({'height':287,'width':520})\r\n      }\r\n    },800)\r\n  }\r\n\r\n  getWordCloud(event) {\r\n    // console.log(event)\r\n    this.param_WordCloud = event.param.name;\r\n  }\r\n\r\n  handleOk(): void {\r\n    this.isVisible = false;\r\n  }\r\n\r\n  getLineGraphVisible(event) {\r\n    // console.log(event)\r\n    this.isVisible = event.visible\r\n  }\r\n\r\n  changeSize(event) {\r\n    event.stopPropagation()\r\n    this.service.nodeSize.next({'height':document.documentElement.scrollHeight,'width':document.documentElement.scrollWidth})\r\n    const target = document.getElementsByClassName('scene-container')[0];\r\n    const sf = <Screenfull>screenfull;\r\n    if (sf.isEnabled) {\r\n      sf.request(target);\r\n    }\r\n  }\r\n\r\n}\r\n","<!--<div nz-row [nzGutter]=\"[16, 16]\" nzJustify=\"space-between\" nzAlign=\"top\" >-->\r\n<!--  <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">-->\r\n<!--    <div class=\"grid-config\">-->\r\n<!--      <div class=\"grid-elems height-100\"  style=\"width:50%; height:30%\">-->\r\n<!--        <app-line-graph></app-line-graph>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--  <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">-->\r\n<!--    <div class=\"grid-config\">-->\r\n<!--      <div class=\"grid-elems height-100\" style=\"width:50%; height:30%\">-->\r\n<!--        <app-word-cloud (msg)=\"getWordCloud($event)\"></app-word-cloud>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n<!--<div nz-row [nzGutter]=\"[16, 16]\" nzJustify=\"space-between\" nzAlign=\"bottom\">-->\r\n<!--  <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">-->\r\n<!--    <div class=\"grid-config\">-->\r\n<!--      <div class=\"grid-elems height-100\" style=\"width:450px; height:350px\">-->\r\n<!--        <app-force-graph [WordCloudParam]=\"param_WordCloud\"></app-force-graph>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--  <div nz-col class=\"gutter-row\" [nzSpan]=\"12\">-->\r\n<!--    <div class=\"grid-config\">-->\r\n<!--      <div class=\"grid-elems height-50\" style=\"width:450px; height:350px\">-->\r\n<!--        <app-heat-map></app-heat-map>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n\r\n<!--<div nz-row nzJustify=\"center\" nzAlign=\"top\">-->\r\n<!--  <div nz-col nzSpan=\"12\" nzXs=\"2\" nzSm=\"4\" nzMd=\"6\" nzLg=\"8\" nzXl=\"10\">-->\r\n<!--    <p class=\"height-100\">-->\r\n<!--      <app-line-graph></app-line-graph>-->\r\n<!--    </p>-->\r\n<!--  </div>-->\r\n<!--  <div nz-col nzSpan=\"12\" nzXs=\"20\" nzSm=\"16\" nzMd=\"12\" nzLg=\"8\" nzXl=\"4\">-->\r\n<!--    <p class=\"height-50\">-->\r\n<!--      <app-word-cloud></app-word-cloud>-->\r\n<!--    </p>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n<!--<div nz-row nzJustify=\"space-between\" nzAlign=\"bottom\">-->\r\n<!--  <div nz-col nzSpan=\"12\">-->\r\n<!--      <app-force-graph></app-force-graph>-->\r\n<!--  </div>-->\r\n<!--  <div nz-col nzSpan=\"12\">-->\r\n<!--      <app-heat-map></app-heat-map>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n<!--bootstrap style-->\r\n<div class=\"row mb-2\">\r\n  <div class=\"col-xl-6\">\r\n    <nz-collapse [nzGhost]=\"true\" nzExpandIconPosition=\"right\">\r\n      <nz-collapse-panel [nzActive]=\"collapse_line\" [nzHeader]=\"'Interactive Line Chart'\">\r\n        <app-line-graph (msg)=getLineGraphVisible($event)></app-line-graph>\r\n      </nz-collapse-panel>\r\n    </nz-collapse>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <nz-collapse [nzGhost]=\"true\" nzExpandIconPosition=\"right\">\r\n      <nz-collapse-panel [nzActive]=\"collapse_word\" [nzHeader]=\"'Word Cloud'\">\r\n        <app-word-cloud (msg)=\"getWordCloud($event)\"></app-word-cloud>\r\n      </nz-collapse-panel>\r\n    </nz-collapse>\r\n  </div>\r\n</div>\r\n<div class=\"row mb-2\">\r\n  <div class=\"col-xl-6\">\r\n    <nz-collapse [nzGhost]=\"true\" nzExpandIconPosition=\"right\" style=\"align-items: center\">\r\n      <nz-collapse-panel [nzActive]=\"collapse_force\" [nzHeader]=\"'Semantic Network'\" [nzExtra]=\"extraTpl\">\r\n        <app-force-graph-td [WordCloudParam]=\"param_WordCloud\"></app-force-graph-td>\r\n      </nz-collapse-panel>\r\n    </nz-collapse>\r\n  </div>\r\n  <div class=\"col-xl-6\">\r\n    <nz-collapse [nzGhost]=\"true\" nzExpandIconPosition=\"right\">\r\n      <nz-collapse-panel [nzActive]=\"collapse_map\" [nzHeader]=\"'Heat Map'\" style=\"align-items: center\">\r\n        <app-heat-map></app-heat-map>\r\n      </nz-collapse-panel>\r\n    </nz-collapse>\r\n  </div>\r\n</div>\r\n\r\n<nz-modal [(nzVisible)]=\"isVisible\" nzTitle=\"Tips\" [nzFooter]=\"modalFooter\" nzClosable=false>\r\n  <ng-container *nzModalContent>\r\n    <p>Sorry, there is no data for the date you selected!</p>\r\n  </ng-container>\r\n  <ng-template #modalFooter>\r\n    <button nz-button nzType=\"primary\" (click)=\"handleOk()\">Ok</button>\r\n  </ng-template>\r\n</nz-modal>\r\n\r\n<ng-template #extraTpl>\r\n    <i nz-icon nzType=\"arrows-alt\" nzTheme=\"outline\" (click)=\"changeSize($event)\"></i>\r\n</ng-template>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {DashboardRoutingModule} from './dashboard-routing.module';\r\nimport {NzLayoutModule} from 'ng-zorro-antd/layout';\r\nimport {NzBreadCrumbModule} from 'ng-zorro-antd/breadcrumb';\r\nimport {NzMenuModule} from 'ng-zorro-antd/menu';\r\nimport {ContentComponent} from './content/content.component';\r\nimport {GraphDisplayComponent} from './graph-display/graph-display.component';\r\nimport {NzIconModule} from \"ng-zorro-antd/icon\";\r\nimport {NzGridModule} from \"ng-zorro-antd/grid\";\r\nimport {GraphModule} from \"../graph/graph.module\";\r\nimport {NzCollapseModule} from \"ng-zorro-antd/collapse\";\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport {NzButtonModule} from \"ng-zorro-antd/button\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [ContentComponent, GraphDisplayComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    NzLayoutModule,\r\n    NzBreadCrumbModule,\r\n    NzMenuModule,\r\n    NzIconModule,\r\n    NzGridModule,\r\n    GraphModule,\r\n    NzCollapseModule,\r\n    NzModalModule,\r\n    NzButtonModule,\r\n  ]\r\n})\r\n\r\nexport class DashboardModule {\r\n}\r\n","import { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { OverlayRef, OverlayConfig, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Directive, ElementRef, ChangeDetectorRef, Renderer2, Component, ChangeDetectionStrategy, Optional, Inject, ViewChild, Output, Injector, TemplateRef, Injectable, SkipSelf, ViewContainerRef, Input, ContentChild, NgModule } from '@angular/core';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn, warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { getElementOffset, isNotNil, isPromise, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject, defer } from 'rxjs';\nimport { takeUntil, filter, take, startWith } from 'rxjs/operators';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { __awaiter, __rest, __decorate, __metadata } from 'tslib';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzPipesModule } from 'ng-zorro-antd/pipes';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc4 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc5 from '@angular/common';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/transition-patch';\nimport * as ɵngcc7 from 'ng-zorro-antd/icon';\nimport * as ɵngcc8 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc9 from '@angular/cdk/portal';\nimport * as ɵngcc10 from 'ng-zorro-antd/button';\nimport * as ɵngcc11 from 'ng-zorro-antd/core/wave';\nimport * as ɵngcc12 from 'ng-zorro-antd/pipes';\nimport * as ɵngcc13 from '@angular/cdk/bidi';\n\nconst _c0 = [\"modalElement\"];\nfunction NzModalConfirmContainerComponent_button_4_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 16);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onCloseClick(); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NzModalConfirmContainerComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 17);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.config.nzTitle, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction NzModalConfirmContainerComponent_ng_template_12_Template(rf, ctx) { }\nfunction NzModalConfirmContainerComponent_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 17);\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction NzModalConfirmContainerComponent_button_15_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_15_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onCancel(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzLoading\", !!ctx_r5.config.nzCancelLoading)(\"disabled\", ctx_r5.config.nzCancelDisabled);\n    ɵngcc0.ɵɵattribute(\"cdkFocusInitial\", ctx_r5.config.nzAutofocus === \"cancel\" || null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.config.nzCancelText || ctx_r5.locale.cancelText, \" \");\n} }\nfunction NzModalConfirmContainerComponent_button_16_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_16_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onOk(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r6.config.nzOkType)(\"nzLoading\", !!ctx_r6.config.nzOkLoading)(\"disabled\", ctx_r6.config.nzOkDisabled)(\"nzDanger\", ctx_r6.config.nzOkDanger);\n    ɵngcc0.ɵɵattribute(\"cdkFocusInitial\", ctx_r6.config.nzAutofocus === \"ok\" || null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r6.config.nzOkText || ctx_r6.locale.okText, \" \");\n} }\nfunction NzModalContainerComponent_button_4_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalContainerComponent_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onCloseClick(); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NzModalContainerComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 10);\n} }\nfunction NzModalContainerComponent_ng_template_7_Template(rf, ctx) { }\nfunction NzModalContainerComponent_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 11);\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction NzModalContainerComponent_div_9_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"cancelTriggered\", function NzModalContainerComponent_div_9_Template_div_cancelTriggered_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onCloseClick(); })(\"okTriggered\", function NzModalContainerComponent_div_9_Template_div_okTriggered_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onOkClick(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"modalRef\", ctx_r5.modalRef);\n} }\nfunction NzModalComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c1 = [\"*\"];\nconst _c2 = [\"nz-modal-close\", \"\"];\nfunction NzModalCloseComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const closeIcon_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", closeIcon_r1);\n} }\nconst _c3 = [\"nz-modal-footer\", \"\"];\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzFooter, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const button_r7 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(4); return ctx_r8.onButtonClick(button_r7); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const button_r7 = ctx.$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"hidden\", !ctx_r6.getButtonCallableProp(button_r7, \"show\"))(\"nzLoading\", ctx_r6.getButtonCallableProp(button_r7, \"loading\"))(\"disabled\", ctx_r6.getButtonCallableProp(button_r7, \"disabled\"))(\"nzType\", button_r7.type)(\"nzDanger\", button_r7.danger)(\"nzShape\", button_r7.shape)(\"nzSize\", button_r7.size)(\"nzGhost\", button_r7.ghost);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", button_r7.label, \" \");\n} }\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template, 2, 9, \"button\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.buttons);\n} }\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_div_1_Template, 1, 1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.buttonsFooter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.buttonsFooter);\n} }\nconst _c4 = function (a0, a1) { return { $implicit: a0, modalRef: a1 }; };\nfunction NzModalFooterComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.config.nzFooter)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c4, ctx_r0.config.nzComponentParams, ctx_r0.modalRef));\n} }\nfunction NzModalFooterComponent_ng_template_1_button_0_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_template_1_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.onCancel(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzLoading\", !!ctx_r10.config.nzCancelLoading)(\"disabled\", ctx_r10.config.nzCancelDisabled);\n    ɵngcc0.ɵɵattribute(\"cdkFocusInitial\", ctx_r10.config.nzAutofocus === \"cancel\" || null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r10.config.nzCancelText || ctx_r10.locale.cancelText, \" \");\n} }\nfunction NzModalFooterComponent_ng_template_1_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_template_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onOk(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r11.config.nzOkType)(\"nzDanger\", ctx_r11.config.nzOkDanger)(\"nzLoading\", !!ctx_r11.config.nzOkLoading)(\"disabled\", ctx_r11.config.nzOkDisabled);\n    ɵngcc0.ɵɵattribute(\"cdkFocusInitial\", ctx_r11.config.nzAutofocus === \"ok\" || null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r11.config.nzOkText || ctx_r11.locale.okText, \" \");\n} }\nfunction NzModalFooterComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzModalFooterComponent_ng_template_1_button_0_Template, 2, 4, \"button\", 8);\n    ɵngcc0.ɵɵtemplate(1, NzModalFooterComponent_ng_template_1_button_1_Template, 2, 6, \"button\", 9);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.config.nzCancelText !== null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.config.nzOkText !== null);\n} }\nconst _c5 = [\"nz-modal-title\", \"\"];\nfunction NzModalTitleComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"div\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.config.nzTitle, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst noopFun = () => void 0;\nconst ɵ0 = noopFun;\nclass ModalOptions {\n    constructor() {\n        this.nzCentered = false;\n        this.nzClosable = true;\n        this.nzOkLoading = false;\n        this.nzOkDisabled = false;\n        this.nzCancelDisabled = false;\n        this.nzCancelLoading = false;\n        this.nzNoAnimation = false;\n        this.nzAutofocus = 'auto';\n        this.nzKeyboard = true;\n        this.nzZIndex = 1000;\n        this.nzWidth = 520;\n        this.nzCloseIcon = 'close';\n        this.nzOkType = 'primary';\n        this.nzOkDanger = false;\n        this.nzModalType = 'default';\n        this.nzOnCancel = noopFun;\n        this.nzOnOk = noopFun;\n        // Confirm\n        this.nzIconType = 'question-circle';\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst ZOOM_CLASS_NAME_MAP = {\n    enter: 'zoom-enter',\n    enterActive: 'zoom-enter-active',\n    leave: 'zoom-leave',\n    leaveActive: 'zoom-leave-active'\n};\nconst FADE_CLASS_NAME_MAP = {\n    enter: 'fade-enter',\n    enterActive: 'fade-enter-active',\n    leave: 'fade-leave',\n    leaveActive: 'fade-leave-active'\n};\nconst MODAL_MASK_CLASS_NAME = 'ant-modal-mask';\nconst NZ_CONFIG_MODULE_NAME = 'modal';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst nzModalAnimations = {\n    modalContainer: trigger('modalContainer', [\n        state('void, exit', style({})),\n        state('enter', style({})),\n        transition('* => enter', animate('.24s', style({}))),\n        transition('* => void, * => exit', animate('.2s', style({})))\n    ])\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\nfunction getValueWithConfig(userValue, configValue, defaultValue) {\n    return typeof userValue === 'undefined' ? (typeof configValue === 'undefined' ? defaultValue : configValue) : userValue;\n}\n/**\n * Assign the params into the content component instance.\n * @deprecated Should use dependency injection to get the params for user\n * @breaking-change 12.0.0\n */\nfunction setContentInstanceParams(instance, params) {\n    Object.assign(instance, params);\n}\nfunction getConfigFromComponent(component) {\n    const { nzCentered, nzMask, nzMaskClosable, nzClosable, nzOkLoading, nzOkDisabled, nzCancelDisabled, nzCancelLoading, nzKeyboard, nzNoAnimation, nzContent, nzComponentParams, nzFooter, nzZIndex, nzWidth, nzWrapClassName, nzClassName, nzStyle, nzTitle, nzCloseIcon, nzMaskStyle, nzBodyStyle, nzOkText, nzCancelText, nzOkType, nzOkDanger, nzIconType, nzModalType, nzOnOk, nzOnCancel, nzAfterOpen, nzAfterClose, nzCloseOnNavigation, nzAutofocus } = component;\n    return {\n        nzCentered,\n        nzMask,\n        nzMaskClosable,\n        nzClosable,\n        nzOkLoading,\n        nzOkDisabled,\n        nzCancelDisabled,\n        nzCancelLoading,\n        nzKeyboard,\n        nzNoAnimation,\n        nzContent,\n        nzComponentParams,\n        nzFooter,\n        nzZIndex,\n        nzWidth,\n        nzWrapClassName,\n        nzClassName,\n        nzStyle,\n        nzTitle,\n        nzCloseIcon,\n        nzMaskStyle,\n        nzBodyStyle,\n        nzOkText,\n        nzCancelText,\n        nzOkType,\n        nzOkDanger,\n        nzIconType,\n        nzModalType,\n        nzOnOk,\n        nzOnCancel,\n        nzAfterOpen,\n        nzAfterClose,\n        nzCloseOnNavigation,\n        nzAutofocus\n    };\n}\n\nfunction throwNzModalContentAlreadyAttachedError() {\n    throw Error('Attempting to attach modal content after content is already attached');\n}\nclass BaseModalContainerComponent extends BasePortalOutlet {\n    constructor(elementRef, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n        super();\n        this.elementRef = elementRef;\n        this.focusTrapFactory = focusTrapFactory;\n        this.cdr = cdr;\n        this.render = render;\n        this.overlayRef = overlayRef;\n        this.nzConfigService = nzConfigService;\n        this.config = config;\n        this.animationType = animationType;\n        this.animationStateChanged = new EventEmitter();\n        this.containerClick = new EventEmitter();\n        this.cancelTriggered = new EventEmitter();\n        this.okTriggered = new EventEmitter();\n        this.state = 'enter';\n        this.isStringContent = false;\n        this.dir = 'ltr';\n        this.elementFocusedBeforeModalWasOpened = null;\n        this.mouseDown = false;\n        this.oldMaskStyle = null;\n        this.destroy$ = new Subject();\n        this.document = document;\n        this.dir = overlayRef.getDirection();\n        this.isStringContent = typeof config.nzContent === 'string';\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateMaskClassname();\n        });\n    }\n    get showMask() {\n        const defaultConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n        return !!getValueWithConfig(this.config.nzMask, defaultConfig.nzMask, true);\n    }\n    get maskClosable() {\n        const defaultConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n        return !!getValueWithConfig(this.config.nzMaskClosable, defaultConfig.nzMaskClosable, true);\n    }\n    onContainerClick(e) {\n        if (e.target === e.currentTarget && !this.mouseDown && this.showMask && this.maskClosable) {\n            this.containerClick.emit();\n        }\n    }\n    onMousedown() {\n        this.mouseDown = true;\n    }\n    onMouseup() {\n        if (this.mouseDown) {\n            setTimeout(() => {\n                this.mouseDown = false;\n            });\n        }\n    }\n    onCloseClick() {\n        this.cancelTriggered.emit();\n    }\n    onOkClick() {\n        this.okTriggered.emit();\n    }\n    attachComponentPortal(portal) {\n        if (this.portalOutlet.hasAttached()) {\n            throwNzModalContentAlreadyAttachedError();\n        }\n        this.savePreviouslyFocusedElement();\n        this.setZIndexForBackdrop();\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n    attachTemplatePortal(portal) {\n        if (this.portalOutlet.hasAttached()) {\n            throwNzModalContentAlreadyAttachedError();\n        }\n        this.savePreviouslyFocusedElement();\n        this.setZIndexForBackdrop();\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n    attachStringContent() {\n        this.savePreviouslyFocusedElement();\n        this.setZIndexForBackdrop();\n    }\n    getNativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    animationDisabled() {\n        return this.config.nzNoAnimation || this.animationType === 'NoopAnimations';\n    }\n    setModalTransformOrigin() {\n        const modalElement = this.modalElementRef.nativeElement;\n        if (this.elementFocusedBeforeModalWasOpened) {\n            const previouslyDOMRect = this.elementFocusedBeforeModalWasOpened.getBoundingClientRect();\n            const lastPosition = getElementOffset(this.elementFocusedBeforeModalWasOpened);\n            const x = lastPosition.left + previouslyDOMRect.width / 2;\n            const y = lastPosition.top + previouslyDOMRect.height / 2;\n            const transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\n            this.render.setStyle(modalElement, 'transform-origin', transformOrigin);\n        }\n    }\n    savePreviouslyFocusedElement() {\n        if (!this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n        }\n        if (this.document) {\n            this.elementFocusedBeforeModalWasOpened = this.document.activeElement;\n            if (this.elementRef.nativeElement.focus) {\n                Promise.resolve().then(() => this.elementRef.nativeElement.focus());\n            }\n        }\n    }\n    trapFocus() {\n        const element = this.elementRef.nativeElement;\n        if (this.config.nzAutofocus) {\n            this.focusTrap.focusInitialElementWhenReady().then();\n        }\n        else {\n            const activeElement = this.document.activeElement;\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    restoreFocus() {\n        const toFocus = this.elementFocusedBeforeModalWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            const activeElement = this.document.activeElement;\n            const element = this.elementRef.nativeElement;\n            if (!activeElement || activeElement === this.document.body || activeElement === element || element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this.focusTrap) {\n            this.focusTrap.destroy();\n        }\n    }\n    setEnterAnimationClass() {\n        if (this.animationDisabled()) {\n            return;\n        }\n        // Make sure to set the `TransformOrigin` style before set the modelElement's class names\n        this.setModalTransformOrigin();\n        const modalElement = this.modalElementRef.nativeElement;\n        const backdropElement = this.overlayRef.backdropElement;\n        modalElement.classList.add(ZOOM_CLASS_NAME_MAP.enter);\n        modalElement.classList.add(ZOOM_CLASS_NAME_MAP.enterActive);\n        if (backdropElement) {\n            backdropElement.classList.add(FADE_CLASS_NAME_MAP.enter);\n            backdropElement.classList.add(FADE_CLASS_NAME_MAP.enterActive);\n        }\n    }\n    setExitAnimationClass() {\n        const modalElement = this.modalElementRef.nativeElement;\n        modalElement.classList.add(ZOOM_CLASS_NAME_MAP.leave);\n        modalElement.classList.add(ZOOM_CLASS_NAME_MAP.leaveActive);\n        this.setMaskExitAnimationClass();\n    }\n    setMaskExitAnimationClass(force = false) {\n        const backdropElement = this.overlayRef.backdropElement;\n        if (backdropElement) {\n            if (this.animationDisabled() || force) {\n                // https://github.com/angular/components/issues/18645\n                backdropElement.classList.remove(MODAL_MASK_CLASS_NAME);\n                return;\n            }\n            backdropElement.classList.add(FADE_CLASS_NAME_MAP.leave);\n            backdropElement.classList.add(FADE_CLASS_NAME_MAP.leaveActive);\n        }\n    }\n    cleanAnimationClass() {\n        if (this.animationDisabled()) {\n            return;\n        }\n        const backdropElement = this.overlayRef.backdropElement;\n        const modalElement = this.modalElementRef.nativeElement;\n        if (backdropElement) {\n            backdropElement.classList.remove(FADE_CLASS_NAME_MAP.enter);\n            backdropElement.classList.remove(FADE_CLASS_NAME_MAP.enterActive);\n        }\n        modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.enter);\n        modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.enterActive);\n        modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.leave);\n        modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.leaveActive);\n    }\n    setZIndexForBackdrop() {\n        const backdropElement = this.overlayRef.backdropElement;\n        if (backdropElement) {\n            if (isNotNil(this.config.nzZIndex)) {\n                this.render.setStyle(backdropElement, 'z-index', this.config.nzZIndex);\n            }\n        }\n    }\n    bindBackdropStyle() {\n        const backdropElement = this.overlayRef.backdropElement;\n        if (backdropElement) {\n            if (this.oldMaskStyle) {\n                const styles = this.oldMaskStyle;\n                Object.keys(styles).forEach(key => {\n                    this.render.removeStyle(backdropElement, key);\n                });\n                this.oldMaskStyle = null;\n            }\n            this.setZIndexForBackdrop();\n            if (typeof this.config.nzMaskStyle === 'object' && Object.keys(this.config.nzMaskStyle).length) {\n                const styles = Object.assign({}, this.config.nzMaskStyle);\n                Object.keys(styles).forEach(key => {\n                    this.render.setStyle(backdropElement, key, styles[key]);\n                });\n                this.oldMaskStyle = styles;\n            }\n        }\n    }\n    updateMaskClassname() {\n        const backdropElement = this.overlayRef.backdropElement;\n        if (backdropElement) {\n            if (this.showMask) {\n                backdropElement.classList.add(MODAL_MASK_CLASS_NAME);\n            }\n            else {\n                backdropElement.classList.remove(MODAL_MASK_CLASS_NAME);\n            }\n        }\n    }\n    onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this.trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this.restoreFocus();\n        }\n        this.cleanAnimationClass();\n        this.animationStateChanged.emit(event);\n    }\n    onAnimationStart(event) {\n        if (event.toState === 'enter') {\n            this.setEnterAnimationClass();\n            this.bindBackdropStyle();\n        }\n        else if (event.toState === 'exit') {\n            this.setExitAnimationClass();\n        }\n        this.animationStateChanged.emit(event);\n    }\n    startExitAnimation() {\n        this.state = 'exit';\n        this.cdr.markForCheck();\n    }\n    ngOnDestroy() {\n        this.setMaskExitAnimationClass(true);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nBaseModalContainerComponent.ɵfac = function BaseModalContainerComponent_Factory(t) { return new (t || BaseModalContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OverlayRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\nBaseModalContainerComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseModalContainerComponent, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nBaseModalContainerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: OverlayRef },\n    { type: NzConfigService },\n    { type: ModalOptions },\n    { type: undefined },\n    { type: String }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalConfirmContainerComponent extends BaseModalContainerComponent {\n    constructor(i18n, elementRef, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n        super(elementRef, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType);\n        this.i18n = i18n;\n        this.config = config;\n        this.cancelTriggered = new EventEmitter();\n        this.okTriggered = new EventEmitter();\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Modal');\n        });\n    }\n    onCancel() {\n        this.cancelTriggered.emit();\n    }\n    onOk() {\n        this.okTriggered.emit();\n    }\n}\nNzModalConfirmContainerComponent.ɵfac = function NzModalConfirmContainerComponent_Factory(t) { return new (t || NzModalConfirmContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NzI18nService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OverlayRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nNzModalConfirmContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzModalConfirmContainerComponent, selectors: [[\"nz-modal-confirm-container\"]], viewQuery: function NzModalConfirmContainerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n        ɵngcc0.ɵɵviewQuery(_c0, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\"], hostVars: 10, hostBindings: function NzModalConfirmContainerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@modalContainer.start\", function NzModalConfirmContainerComponent_animation_modalContainer_start_HostBindingHandler($event) { return ctx.onAnimationStart($event); })(\"@modalContainer.done\", function NzModalConfirmContainerComponent_animation_modalContainer_done_HostBindingHandler($event) { return ctx.onAnimationDone($event); });\n        ɵngcc0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_click_HostBindingHandler($event) { return ctx.onContainerClick($event); })(\"mouseup\", function NzModalConfirmContainerComponent_mouseup_HostBindingHandler() { return ctx.onMouseup(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.config.nzNoAnimation)(\"@modalContainer\", ctx.state);\n        ɵngcc0.ɵɵclassMap(ctx.config.nzWrapClassName ? \"ant-modal-wrap \" + ctx.config.nzWrapClassName : \"ant-modal-wrap\");\n        ɵngcc0.ɵɵstyleProp(\"z-index\", ctx.config.nzZIndex);\n        ɵngcc0.ɵɵclassProp(\"ant-modal-wrap-rtl\", ctx.dir === \"rtl\")(\"ant-modal-centered\", ctx.config.nzCentered);\n    } }, outputs: { cancelTriggered: \"cancelTriggered\", okTriggered: \"okTriggered\" }, exportAs: [\"nzModalConfirmContainer\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 17, vars: 13, consts: [[\"role\", \"document\", 1, \"ant-modal\", 3, \"ngClass\", \"ngStyle\", \"mousedown\"], [\"modalElement\", \"\"], [1, \"ant-modal-content\"], [\"nz-modal-close\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-modal-body\", 3, \"ngStyle\"], [1, \"ant-modal-confirm-body-wrapper\"], [1, \"ant-modal-confirm-body\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-modal-confirm-title\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-modal-confirm-content\"], [\"cdkPortalOutlet\", \"\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"ant-modal-confirm-btns\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzLoading\", \"disabled\", \"nzDanger\", \"click\", 4, \"ngIf\"], [\"nz-modal-close\", \"\", 3, \"click\"], [3, \"innerHTML\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzLoading\", \"disabled\", \"nzDanger\", \"click\"]], template: function NzModalConfirmContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NzModalConfirmContainerComponent_Template_div_mousedown_0_listener() { return ctx.onMousedown(); });\n        ɵngcc0.ɵɵpipe(2, \"nzToCssUnit\");\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzModalConfirmContainerComponent_button_4_Template, 1, 0, \"button\", 3);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"div\", 6);\n        ɵngcc0.ɵɵelement(8, \"i\", 7);\n        ɵngcc0.ɵɵelementStart(9, \"span\", 8);\n        ɵngcc0.ɵɵtemplate(10, NzModalConfirmContainerComponent_ng_container_10_Template, 2, 1, \"ng-container\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 10);\n        ɵngcc0.ɵɵtemplate(12, NzModalConfirmContainerComponent_ng_template_12_Template, 0, 0, \"ng-template\", 11);\n        ɵngcc0.ɵɵtemplate(13, NzModalConfirmContainerComponent_div_13_Template, 1, 1, \"div\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(14, \"div\", 13);\n        ɵngcc0.ɵɵtemplate(15, NzModalConfirmContainerComponent_button_15_Template, 2, 4, \"button\", 14);\n        ɵngcc0.ɵɵtemplate(16, NzModalConfirmContainerComponent_button_16_Template, 2, 6, \"button\", 15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ɵngcc0.ɵɵpipeBind1(2, 11, ctx.config == null ? null : ctx.config.nzWidth));\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.config.nzClassName)(\"ngStyle\", ctx.config.nzStyle);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzClosable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.config.nzBodyStyle);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"nzType\", ctx.config.nzIconType);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzTitle);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzCancelText !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzOkText !== null);\n    } }, directives: function () { return [ɵngcc5.NgClass, ɵngcc5.NgStyle, ɵngcc5.NgIf, ɵngcc6.ɵNzTransitionPatchDirective, ɵngcc7.NzIconDirective, ɵngcc8.NzStringTemplateOutletDirective, ɵngcc9.CdkPortalOutlet, NzModalCloseComponent, ɵngcc10.NzButtonComponent, ɵngcc11.NzWaveDirective]; }, pipes: function () { return [ɵngcc12.NzToCssUnitPipe]; }, encapsulation: 2, data: { animation: [nzModalAnimations.modalContainer] } });\nNzModalConfirmContainerComponent.ctorParameters = () => [\n    { type: NzI18nService },\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: OverlayRef },\n    { type: NzConfigService },\n    { type: ModalOptions },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nNzModalConfirmContainerComponent.propDecorators = {\n    portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }],\n    modalElementRef: [{ type: ViewChild, args: ['modalElement', { static: true },] }],\n    cancelTriggered: [{ type: Output }],\n    okTriggered: [{ type: Output }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalContainerComponent extends BaseModalContainerComponent {\n    constructor(elementRef, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n        super(elementRef, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType);\n        this.config = config;\n    }\n}\nNzModalContainerComponent.ɵfac = function NzModalContainerComponent_Factory(t) { return new (t || NzModalContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OverlayRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nNzModalContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzModalContainerComponent, selectors: [[\"nz-modal-container\"]], viewQuery: function NzModalContainerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n        ɵngcc0.ɵɵviewQuery(_c0, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\"], hostVars: 10, hostBindings: function NzModalContainerComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@modalContainer.start\", function NzModalContainerComponent_animation_modalContainer_start_HostBindingHandler($event) { return ctx.onAnimationStart($event); })(\"@modalContainer.done\", function NzModalContainerComponent_animation_modalContainer_done_HostBindingHandler($event) { return ctx.onAnimationDone($event); });\n        ɵngcc0.ɵɵlistener(\"click\", function NzModalContainerComponent_click_HostBindingHandler($event) { return ctx.onContainerClick($event); })(\"mouseup\", function NzModalContainerComponent_mouseup_HostBindingHandler() { return ctx.onMouseup(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.config.nzNoAnimation)(\"@modalContainer\", ctx.state);\n        ɵngcc0.ɵɵclassMap(ctx.config.nzWrapClassName ? \"ant-modal-wrap \" + ctx.config.nzWrapClassName : \"ant-modal-wrap\");\n        ɵngcc0.ɵɵstyleProp(\"z-index\", ctx.config.nzZIndex);\n        ɵngcc0.ɵɵclassProp(\"ant-modal-wrap-rtl\", ctx.dir === \"rtl\")(\"ant-modal-centered\", ctx.config.nzCentered);\n    } }, exportAs: [\"nzModalContainer\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 11, consts: [[\"role\", \"document\", 1, \"ant-modal\", 3, \"ngClass\", \"ngStyle\", \"mousedown\"], [\"modalElement\", \"\"], [1, \"ant-modal-content\"], [\"nz-modal-close\", \"\", 3, \"click\", 4, \"ngIf\"], [\"nz-modal-title\", \"\", 4, \"ngIf\"], [1, \"ant-modal-body\", 3, \"ngStyle\"], [\"cdkPortalOutlet\", \"\"], [3, \"innerHTML\", 4, \"ngIf\"], [\"nz-modal-footer\", \"\", 3, \"modalRef\", \"cancelTriggered\", \"okTriggered\", 4, \"ngIf\"], [\"nz-modal-close\", \"\", 3, \"click\"], [\"nz-modal-title\", \"\"], [3, \"innerHTML\"], [\"nz-modal-footer\", \"\", 3, \"modalRef\", \"cancelTriggered\", \"okTriggered\"]], template: function NzModalContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NzModalContainerComponent_Template_div_mousedown_0_listener() { return ctx.onMousedown(); });\n        ɵngcc0.ɵɵpipe(2, \"nzToCssUnit\");\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzModalContainerComponent_button_4_Template, 1, 0, \"button\", 3);\n        ɵngcc0.ɵɵtemplate(5, NzModalContainerComponent_div_5_Template, 1, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(7, NzModalContainerComponent_ng_template_7_Template, 0, 0, \"ng-template\", 6);\n        ɵngcc0.ɵɵtemplate(8, NzModalContainerComponent_div_8_Template, 1, 1, \"div\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, NzModalContainerComponent_div_9_Template, 1, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ɵngcc0.ɵɵpipeBind1(2, 9, ctx.config == null ? null : ctx.config.nzWidth));\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.config.nzClassName)(\"ngStyle\", ctx.config.nzStyle);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzClosable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzTitle);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.config.nzBodyStyle);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzFooter !== null);\n    } }, directives: function () { return [ɵngcc5.NgClass, ɵngcc5.NgStyle, ɵngcc5.NgIf, ɵngcc9.CdkPortalOutlet, NzModalCloseComponent, NzModalTitleComponent, NzModalFooterComponent]; }, pipes: function () { return [ɵngcc12.NzToCssUnitPipe]; }, encapsulation: 2, data: { animation: [nzModalAnimations.modalContainer] } });\nNzModalContainerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: OverlayRef },\n    { type: NzConfigService },\n    { type: ModalOptions },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nNzModalContainerComponent.propDecorators = {\n    portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }],\n    modalElementRef: [{ type: ViewChild, args: ['modalElement', { static: true },] }]\n};\n\nclass NzModalRef {\n    constructor(overlayRef, config, containerInstance) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        this.containerInstance = containerInstance;\n        this.componentInstance = null;\n        this.state = 0 /* OPEN */;\n        this.afterClose = new Subject();\n        this.afterOpen = new Subject();\n        containerInstance.animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'enter'), take(1))\n            .subscribe(() => {\n            this.afterOpen.next();\n            this.afterOpen.complete();\n            if (config.nzAfterOpen instanceof EventEmitter) {\n                config.nzAfterOpen.emit();\n            }\n        });\n        containerInstance.animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'exit'), take(1))\n            .subscribe(() => {\n            clearTimeout(this.closeTimeout);\n            this._finishDialogClose();\n        });\n        containerInstance.containerClick.pipe(take(1)).subscribe(() => {\n            const cancelable = !this.config.nzCancelLoading && !this.config.nzOkLoading;\n            if (cancelable) {\n                this.trigger(\"cancel\" /* CANCEL */);\n            }\n        });\n        overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return (this.config.nzKeyboard &&\n                !this.config.nzCancelLoading &&\n                !this.config.nzOkLoading &&\n                event.keyCode === ESCAPE &&\n                !hasModifierKey(event));\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            this.trigger(\"cancel\" /* CANCEL */);\n        });\n        containerInstance.cancelTriggered.subscribe(() => this.trigger(\"cancel\" /* CANCEL */));\n        containerInstance.okTriggered.subscribe(() => this.trigger(\"ok\" /* OK */));\n        overlayRef.detachments().subscribe(() => {\n            this.afterClose.next(this.result);\n            this.afterClose.complete();\n            if (config.nzAfterClose instanceof EventEmitter) {\n                config.nzAfterClose.emit(this.result);\n            }\n            this.componentInstance = null;\n            this.overlayRef.dispose();\n        });\n    }\n    getContentComponent() {\n        return this.componentInstance;\n    }\n    getElement() {\n        return this.containerInstance.getNativeElement();\n    }\n    destroy(result) {\n        this.close(result);\n    }\n    triggerOk() {\n        return this.trigger(\"ok\" /* OK */);\n    }\n    triggerCancel() {\n        return this.trigger(\"cancel\" /* CANCEL */);\n    }\n    close(result) {\n        this.result = result;\n        this.containerInstance.animationStateChanged\n            .pipe(filter(event => event.phaseName === 'start'), take(1))\n            .subscribe(event => {\n            this.overlayRef.detachBackdrop();\n            this.closeTimeout = setTimeout(() => {\n                this._finishDialogClose();\n            }, event.totalTime + 100);\n        });\n        this.containerInstance.startExitAnimation();\n        this.state = 1 /* CLOSING */;\n    }\n    updateConfig(config) {\n        Object.assign(this.config, config);\n        this.containerInstance.bindBackdropStyle();\n        this.containerInstance.cdr.markForCheck();\n    }\n    getState() {\n        return this.state;\n    }\n    getConfig() {\n        return this.config;\n    }\n    getBackdropElement() {\n        return this.overlayRef.backdropElement;\n    }\n    trigger(action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const trigger = { ok: this.config.nzOnOk, cancel: this.config.nzOnCancel }[action];\n            const loadingKey = { ok: 'nzOkLoading', cancel: 'nzCancelLoading' }[action];\n            const loading = this.config[loadingKey];\n            if (loading) {\n                return;\n            }\n            if (trigger instanceof EventEmitter) {\n                trigger.emit(this.getContentComponent());\n            }\n            else if (typeof trigger === 'function') {\n                const result = trigger(this.getContentComponent());\n                if (isPromise(result)) {\n                    this.config[loadingKey] = true;\n                    let doClose = false;\n                    try {\n                        doClose = yield result;\n                    }\n                    finally {\n                        this.config[loadingKey] = false;\n                        this.closeWhitResult(doClose);\n                    }\n                }\n                else {\n                    this.closeWhitResult(result);\n                }\n            }\n        });\n    }\n    closeWhitResult(result) {\n        if (result !== false) {\n            this.close(result);\n        }\n    }\n    _finishDialogClose() {\n        this.state = 2 /* CLOSED */;\n        this.overlayRef.dispose();\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalService {\n    constructor(overlay, injector, nzConfigService, parentModal, directionality) {\n        this.overlay = overlay;\n        this.injector = injector;\n        this.nzConfigService = nzConfigService;\n        this.parentModal = parentModal;\n        this.directionality = directionality;\n        this.openModalsAtThisLevel = [];\n        this.afterAllClosedAtThisLevel = new Subject();\n        this.afterAllClose = defer(() => this.openModals.length ? this._afterAllClosed : this._afterAllClosed.pipe(startWith(undefined)));\n    }\n    get openModals() {\n        return this.parentModal ? this.parentModal.openModals : this.openModalsAtThisLevel;\n    }\n    get _afterAllClosed() {\n        const parent = this.parentModal;\n        return parent ? parent._afterAllClosed : this.afterAllClosedAtThisLevel;\n    }\n    create(config) {\n        return this.open(config.nzContent, config);\n    }\n    closeAll() {\n        this.closeModals(this.openModals);\n    }\n    confirm(options = {}, confirmType = 'confirm') {\n        if ('nzFooter' in options) {\n            warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\n        }\n        if (!('nzWidth' in options)) {\n            options.nzWidth = 416;\n        }\n        if (!('nzMaskClosable' in options)) {\n            options.nzMaskClosable = false;\n        }\n        options.nzModalType = 'confirm';\n        options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\n        return this.create(options);\n    }\n    info(options = {}) {\n        return this.confirmFactory(options, 'info');\n    }\n    success(options = {}) {\n        return this.confirmFactory(options, 'success');\n    }\n    error(options = {}) {\n        return this.confirmFactory(options, 'error');\n    }\n    warning(options = {}) {\n        return this.confirmFactory(options, 'warning');\n    }\n    open(componentOrTemplateRef, config) {\n        const configMerged = applyConfigDefaults(config || {}, new ModalOptions());\n        const overlayRef = this.createOverlay(configMerged);\n        const modalContainer = this.attachModalContainer(overlayRef, configMerged);\n        const modalRef = this.attachModalContent(componentOrTemplateRef, modalContainer, overlayRef, configMerged);\n        modalContainer.modalRef = modalRef;\n        this.openModals.push(modalRef);\n        modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n        return modalRef;\n    }\n    removeOpenModal(modalRef) {\n        const index = this.openModals.indexOf(modalRef);\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n            if (!this.openModals.length) {\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    closeModals(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n            if (!this.openModals.length) {\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    createOverlay(config) {\n        const globalConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: true,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global(),\n            disposeOnNavigation: getValueWithConfig(config.nzCloseOnNavigation, globalConfig.nzCloseOnNavigation, true),\n            direction: getValueWithConfig(config.nzDirection, globalConfig.nzDirection, this.directionality.value)\n        });\n        if (getValueWithConfig(config.nzMask, globalConfig.nzMask, true)) {\n            overlayConfig.backdropClass = MODAL_MASK_CLASS_NAME;\n        }\n        return this.overlay.create(overlayConfig);\n    }\n    attachModalContainer(overlayRef, config) {\n        const userInjector = config && config.nzViewContainerRef && config.nzViewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this.injector,\n            providers: [\n                { provide: OverlayRef, useValue: overlayRef },\n                { provide: ModalOptions, useValue: config }\n            ]\n        });\n        const ContainerComponent = config.nzModalType === 'confirm'\n            ? // If the mode is `confirm`, use `NzModalConfirmContainerComponent`\n                NzModalConfirmContainerComponent\n            : // If the mode is not `confirm`, use `NzModalContainerComponent`\n                NzModalContainerComponent;\n        const containerPortal = new ComponentPortal(ContainerComponent, config.nzViewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    attachModalContent(componentOrTemplateRef, modalContainer, overlayRef, config) {\n        const modalRef = new NzModalRef(overlayRef, config, modalContainer);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            modalContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, { $implicit: config.nzComponentParams, modalRef }));\n        }\n        else if (isNotNil(componentOrTemplateRef) && typeof componentOrTemplateRef !== 'string') {\n            const injector = this.createInjector(modalRef, config);\n            const contentRef = modalContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.nzViewContainerRef, injector));\n            setContentInstanceParams(contentRef.instance, config.nzComponentParams);\n            modalRef.componentInstance = contentRef.instance;\n        }\n        else {\n            modalContainer.attachStringContent();\n        }\n        return modalRef;\n    }\n    createInjector(modalRef, config) {\n        const userInjector = config && config.nzViewContainerRef && config.nzViewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this.injector,\n            providers: [{ provide: NzModalRef, useValue: modalRef }]\n        });\n    }\n    confirmFactory(options = {}, confirmType) {\n        const iconMap = {\n            info: 'info-circle',\n            success: 'check-circle',\n            error: 'close-circle',\n            warning: 'exclamation-circle'\n        };\n        if (!('nzIconType' in options)) {\n            options.nzIconType = iconMap[confirmType];\n        }\n        if (!('nzCancelText' in options)) {\n            // Remove the Cancel button if the user not specify a Cancel button\n            options.nzCancelText = null;\n        }\n        return this.confirm(options, confirmType);\n    }\n    ngOnDestroy() {\n        this.closeModals(this.openModalsAtThisLevel);\n        this.afterAllClosedAtThisLevel.complete();\n    }\n}\nNzModalService.ɵfac = function NzModalService_Factory(t) { return new (t || NzModalService)(ɵngcc0.ɵɵinject(ɵngcc2.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc3.NzConfigService), ɵngcc0.ɵɵinject(NzModalService, 12), ɵngcc0.ɵɵinject(ɵngcc13.Directionality, 8)); };\nNzModalService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NzModalService, factory: NzModalService.ɵfac });\nNzModalService.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: NzConfigService },\n    { type: NzModalService, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalContentDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNzModalContentDirective.ɵfac = function NzModalContentDirective_Factory(t) { return new (t || NzModalContentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNzModalContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzModalContentDirective, selectors: [[\"\", \"nzModalContent\", \"\"]], exportAs: [\"nzModalContent\"] });\nNzModalContentDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalFooterDirective {\n    constructor(nzModalRef, templateRef) {\n        this.nzModalRef = nzModalRef;\n        this.templateRef = templateRef;\n        if (this.nzModalRef) {\n            this.nzModalRef.updateConfig({\n                nzFooter: this.templateRef\n            });\n        }\n    }\n}\nNzModalFooterDirective.ɵfac = function NzModalFooterDirective_Factory(t) { return new (t || NzModalFooterDirective)(ɵngcc0.ɵɵdirectiveInject(NzModalRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNzModalFooterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzModalFooterDirective, selectors: [[\"\", \"nzModalFooter\", \"\"]], exportAs: [\"nzModalFooter\"] });\nNzModalFooterDirective.ctorParameters = () => [\n    { type: NzModalRef, decorators: [{ type: Optional }] },\n    { type: TemplateRef }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalTitleDirective {\n    constructor(nzModalRef, templateRef) {\n        this.nzModalRef = nzModalRef;\n        this.templateRef = templateRef;\n        if (this.nzModalRef) {\n            this.nzModalRef.updateConfig({\n                nzTitle: this.templateRef\n            });\n        }\n    }\n}\nNzModalTitleDirective.ɵfac = function NzModalTitleDirective_Factory(t) { return new (t || NzModalTitleDirective)(ɵngcc0.ɵɵdirectiveInject(NzModalRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNzModalTitleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzModalTitleDirective, selectors: [[\"\", \"nzModalTitle\", \"\"]], exportAs: [\"nzModalTitle\"] });\nNzModalTitleDirective.ctorParameters = () => [\n    { type: NzModalRef, decorators: [{ type: Optional }] },\n    { type: TemplateRef }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalComponent {\n    constructor(cdr, modal, viewContainerRef) {\n        this.cdr = cdr;\n        this.modal = modal;\n        this.viewContainerRef = viewContainerRef;\n        this.nzVisible = false;\n        this.nzClosable = true;\n        this.nzOkLoading = false;\n        this.nzOkDisabled = false;\n        this.nzCancelDisabled = false;\n        this.nzCancelLoading = false;\n        this.nzKeyboard = true;\n        this.nzNoAnimation = false;\n        this.nzCentered = false;\n        this.nzZIndex = 1000;\n        this.nzWidth = 520;\n        this.nzCloseIcon = 'close';\n        this.nzOkType = 'primary';\n        this.nzOkDanger = false;\n        this.nzIconType = 'question-circle'; // Confirm Modal ONLY\n        this.nzModalType = 'default';\n        this.nzAutofocus = 'auto';\n        // TODO(@hsuanxyz) Input will not be supported\n        this.nzOnOk = new EventEmitter();\n        // TODO(@hsuanxyz) Input will not be supported\n        this.nzOnCancel = new EventEmitter();\n        this.nzAfterOpen = new EventEmitter();\n        this.nzAfterClose = new EventEmitter();\n        this.nzVisibleChange = new EventEmitter();\n        this.modalRef = null;\n    }\n    set modalTitle(value) {\n        if (value) {\n            this.setTitleWithTemplate(value);\n        }\n    }\n    set modalFooter(value) {\n        if (value) {\n            this.setFooterWithTemplate(value);\n        }\n    }\n    get afterOpen() {\n        // Observable alias for nzAfterOpen\n        return this.nzAfterOpen.asObservable();\n    }\n    get afterClose() {\n        // Observable alias for nzAfterClose\n        return this.nzAfterClose.asObservable();\n    }\n    open() {\n        if (!this.nzVisible) {\n            this.nzVisible = true;\n            this.nzVisibleChange.emit(true);\n        }\n        if (!this.modalRef) {\n            const config = this.getConfig();\n            this.modalRef = this.modal.create(config);\n        }\n    }\n    close(result) {\n        if (this.nzVisible) {\n            this.nzVisible = false;\n            this.nzVisibleChange.emit(false);\n        }\n        if (this.modalRef) {\n            this.modalRef.close(result);\n            this.modalRef = null;\n        }\n    }\n    destroy(result) {\n        this.close(result);\n    }\n    triggerOk() {\n        var _a;\n        (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.triggerOk();\n    }\n    triggerCancel() {\n        var _a;\n        (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.triggerCancel();\n    }\n    getContentComponent() {\n        var _a;\n        return (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.getContentComponent();\n    }\n    getElement() {\n        var _a;\n        return (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.getElement();\n    }\n    getModalRef() {\n        return this.modalRef;\n    }\n    setTitleWithTemplate(templateRef) {\n        this.nzTitle = templateRef;\n        if (this.modalRef) {\n            // If modalRef already created, set the title in next tick\n            Promise.resolve().then(() => {\n                this.modalRef.updateConfig({\n                    nzTitle: this.nzTitle\n                });\n            });\n        }\n    }\n    setFooterWithTemplate(templateRef) {\n        this.nzFooter = templateRef;\n        if (this.modalRef) {\n            // If modalRef already created, set the footer in next tick\n            Promise.resolve().then(() => {\n                this.modalRef.updateConfig({\n                    nzFooter: this.nzFooter\n                });\n            });\n        }\n        this.cdr.markForCheck();\n    }\n    getConfig() {\n        const componentConfig = getConfigFromComponent(this);\n        componentConfig.nzViewContainerRef = this.viewContainerRef;\n        if (!this.nzContent && !this.contentFromContentChild) {\n            componentConfig.nzContent = this.contentTemplateRef;\n            warnDeprecation('Usage `<ng-content></ng-content>` is deprecated, which will be removed in 12.0.0. Please instead use `<ng-template nzModalContent></ng-template>` to declare the content of the modal.');\n        }\n        else {\n            componentConfig.nzContent = this.nzContent || this.contentFromContentChild;\n        }\n        return componentConfig;\n    }\n    ngOnChanges(changes) {\n        const { nzVisible } = changes, otherChanges = __rest(changes, [\"nzVisible\"]);\n        if (Object.keys(otherChanges).length && this.modalRef) {\n            this.modalRef.updateConfig(getConfigFromComponent(this));\n        }\n        if (nzVisible) {\n            if (this.nzVisible) {\n                this.open();\n            }\n            else {\n                this.close();\n            }\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a._finishDialogClose();\n    }\n}\nNzModalComponent.ɵfac = function NzModalComponent_Factory(t) { return new (t || NzModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NzModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nNzModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzModalComponent, selectors: [[\"nz-modal\"]], contentQueries: function NzModalComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzModalTitleDirective, 3, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzModalFooterDirective, 3, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzModalContentDirective, 3, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalTitle = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalFooter = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentFromContentChild = _t.first);\n    } }, viewQuery: function NzModalComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplateRef = _t.first);\n    } }, inputs: { nzVisible: \"nzVisible\", nzClosable: \"nzClosable\", nzOkLoading: \"nzOkLoading\", nzOkDisabled: \"nzOkDisabled\", nzCancelDisabled: \"nzCancelDisabled\", nzCancelLoading: \"nzCancelLoading\", nzKeyboard: \"nzKeyboard\", nzNoAnimation: \"nzNoAnimation\", nzCentered: \"nzCentered\", nzZIndex: \"nzZIndex\", nzWidth: \"nzWidth\", nzCloseIcon: \"nzCloseIcon\", nzOkType: \"nzOkType\", nzOkDanger: \"nzOkDanger\", nzIconType: \"nzIconType\", nzModalType: \"nzModalType\", nzAutofocus: \"nzAutofocus\", nzOnOk: \"nzOnOk\", nzOnCancel: \"nzOnCancel\", nzTitle: \"nzTitle\", nzFooter: \"nzFooter\", nzMask: \"nzMask\", nzMaskClosable: \"nzMaskClosable\", nzCloseOnNavigation: \"nzCloseOnNavigation\", nzContent: \"nzContent\", nzComponentParams: \"nzComponentParams\", nzWrapClassName: \"nzWrapClassName\", nzClassName: \"nzClassName\", nzStyle: \"nzStyle\", nzMaskStyle: \"nzMaskStyle\", nzBodyStyle: \"nzBodyStyle\", nzOkText: \"nzOkText\", nzCancelText: \"nzCancelText\" }, outputs: { nzOnOk: \"nzOnOk\", nzOnCancel: \"nzOnCancel\", nzAfterOpen: \"nzAfterOpen\", nzAfterClose: \"nzAfterClose\", nzVisibleChange: \"nzVisibleChange\" }, exportAs: [\"nzModal\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 1, vars: 0, template: function NzModalComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzModalComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nNzModalComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NzModalService },\n    { type: ViewContainerRef }\n];\nNzModalComponent.propDecorators = {\n    nzMask: [{ type: Input }],\n    nzMaskClosable: [{ type: Input }],\n    nzCloseOnNavigation: [{ type: Input }],\n    nzVisible: [{ type: Input }],\n    nzClosable: [{ type: Input }],\n    nzOkLoading: [{ type: Input }],\n    nzOkDisabled: [{ type: Input }],\n    nzCancelDisabled: [{ type: Input }],\n    nzCancelLoading: [{ type: Input }],\n    nzKeyboard: [{ type: Input }],\n    nzNoAnimation: [{ type: Input }],\n    nzCentered: [{ type: Input }],\n    nzContent: [{ type: Input }],\n    nzComponentParams: [{ type: Input }],\n    nzFooter: [{ type: Input }],\n    nzZIndex: [{ type: Input }],\n    nzWidth: [{ type: Input }],\n    nzWrapClassName: [{ type: Input }],\n    nzClassName: [{ type: Input }],\n    nzStyle: [{ type: Input }],\n    nzTitle: [{ type: Input }],\n    nzCloseIcon: [{ type: Input }],\n    nzMaskStyle: [{ type: Input }],\n    nzBodyStyle: [{ type: Input }],\n    nzOkText: [{ type: Input }],\n    nzCancelText: [{ type: Input }],\n    nzOkType: [{ type: Input }],\n    nzOkDanger: [{ type: Input }],\n    nzIconType: [{ type: Input }],\n    nzModalType: [{ type: Input }],\n    nzAutofocus: [{ type: Input }],\n    nzOnOk: [{ type: Input }, { type: Output }],\n    nzOnCancel: [{ type: Input }, { type: Output }],\n    nzAfterOpen: [{ type: Output }],\n    nzAfterClose: [{ type: Output }],\n    nzVisibleChange: [{ type: Output }],\n    contentTemplateRef: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    modalTitle: [{ type: ContentChild, args: [NzModalTitleDirective, { static: true, read: TemplateRef },] }],\n    contentFromContentChild: [{ type: ContentChild, args: [NzModalContentDirective, { static: true, read: TemplateRef },] }],\n    modalFooter: [{ type: ContentChild, args: [NzModalFooterDirective, { static: true, read: TemplateRef },] }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzMask\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzMaskClosable\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzCloseOnNavigation\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzVisible\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzClosable\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzOkLoading\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzOkDisabled\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzCancelDisabled\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzCancelLoading\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzKeyboard\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzModalComponent.prototype, \"nzNoAnimation\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzModalComponent.prototype, \"nzCentered\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzModalComponent.prototype, \"nzOkDanger\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseModalContainerComponent, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.OverlayRef }, { type: ɵngcc3.NzConfigService }, { type: ModalOptions }, { type: undefined }, { type: String }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalConfirmContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-modal-confirm-container',\n                exportAs: 'nzModalConfirmContainer',\n                template: `\n    <div\n      #modalElement\n      role=\"document\"\n      class=\"ant-modal\"\n      (mousedown)=\"onMousedown()\"\n      [ngClass]=\"config.nzClassName!\"\n      [ngStyle]=\"config.nzStyle!\"\n      [style.width]=\"config?.nzWidth! | nzToCssUnit\"\n    >\n      <div class=\"ant-modal-content\">\n        <button *ngIf=\"config.nzClosable\" nz-modal-close (click)=\"onCloseClick()\"></button>\n        <div class=\"ant-modal-body\" [ngStyle]=\"config.nzBodyStyle!\">\n          <div class=\"ant-modal-confirm-body-wrapper\">\n            <div class=\"ant-modal-confirm-body\">\n              <i nz-icon [nzType]=\"config.nzIconType!\"></i>\n              <span class=\"ant-modal-confirm-title\">\n                <ng-container *nzStringTemplateOutlet=\"config.nzTitle\">\n                  <span [innerHTML]=\"config.nzTitle\"></span>\n                </ng-container>\n              </span>\n              <div class=\"ant-modal-confirm-content\">\n                <ng-template cdkPortalOutlet></ng-template>\n                <div *ngIf=\"isStringContent\" [innerHTML]=\"config.nzContent\"></div>\n              </div>\n            </div>\n            <div class=\"ant-modal-confirm-btns\">\n              <button\n                *ngIf=\"config.nzCancelText !== null\"\n                [attr.cdkFocusInitial]=\"config.nzAutofocus === 'cancel' || null\"\n                nz-button\n                (click)=\"onCancel()\"\n                [nzLoading]=\"!!config.nzCancelLoading\"\n                [disabled]=\"config.nzCancelDisabled\"\n              >\n                {{ config.nzCancelText || locale.cancelText }}\n              </button>\n              <button\n                *ngIf=\"config.nzOkText !== null\"\n                [attr.cdkFocusInitial]=\"config.nzAutofocus === 'ok' || null\"\n                nz-button\n                [nzType]=\"config.nzOkType!\"\n                (click)=\"onOk()\"\n                [nzLoading]=\"!!config.nzOkLoading\"\n                [disabled]=\"config.nzOkDisabled\"\n                [nzDanger]=\"config.nzOkDanger\"\n              >\n                {{ config.nzOkText || locale.okText }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n                animations: [nzModalAnimations.modalContainer],\n                // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    tabindex: '-1',\n                    role: 'dialog',\n                    '[class]': 'config.nzWrapClassName ? \"ant-modal-wrap \" + config.nzWrapClassName : \"ant-modal-wrap\"',\n                    '[class.ant-modal-wrap-rtl]': `dir === 'rtl'`,\n                    '[class.ant-modal-centered]': 'config.nzCentered',\n                    '[style.zIndex]': 'config.nzZIndex',\n                    '[@.disabled]': 'config.nzNoAnimation',\n                    '[@modalContainer]': 'state',\n                    '(@modalContainer.start)': 'onAnimationStart($event)',\n                    '(@modalContainer.done)': 'onAnimationDone($event)',\n                    '(click)': 'onContainerClick($event)',\n                    '(mouseup)': 'onMouseup()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc4.NzI18nService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.OverlayRef }, { type: ɵngcc3.NzConfigService }, { type: ModalOptions }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { cancelTriggered: [{\n            type: Output\n        }], okTriggered: [{\n            type: Output\n        }], portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }], modalElementRef: [{\n            type: ViewChild,\n            args: ['modalElement', { static: true }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-modal-container',\n                exportAs: 'nzModalContainer',\n                template: `\n    <div\n      #modalElement\n      role=\"document\"\n      class=\"ant-modal\"\n      (mousedown)=\"onMousedown()\"\n      [ngClass]=\"config.nzClassName!\"\n      [ngStyle]=\"config.nzStyle!\"\n      [style.width]=\"config?.nzWidth! | nzToCssUnit\"\n    >\n      <div class=\"ant-modal-content\">\n        <button *ngIf=\"config.nzClosable\" nz-modal-close (click)=\"onCloseClick()\"></button>\n        <div *ngIf=\"config.nzTitle\" nz-modal-title></div>\n        <div class=\"ant-modal-body\" [ngStyle]=\"config.nzBodyStyle!\">\n          <ng-template cdkPortalOutlet></ng-template>\n          <div *ngIf=\"isStringContent\" [innerHTML]=\"config.nzContent\"></div>\n        </div>\n        <div\n          *ngIf=\"config.nzFooter !== null\"\n          nz-modal-footer\n          [modalRef]=\"modalRef\"\n          (cancelTriggered)=\"onCloseClick()\"\n          (okTriggered)=\"onOkClick()\"\n        ></div>\n      </div>\n    </div>\n  `,\n                animations: [nzModalAnimations.modalContainer],\n                // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    tabindex: '-1',\n                    role: 'dialog',\n                    '[class]': 'config.nzWrapClassName ? \"ant-modal-wrap \" + config.nzWrapClassName : \"ant-modal-wrap\"',\n                    '[class.ant-modal-wrap-rtl]': `dir === 'rtl'`,\n                    '[class.ant-modal-centered]': 'config.nzCentered',\n                    '[style.zIndex]': 'config.nzZIndex',\n                    '[@.disabled]': 'config.nzNoAnimation',\n                    '[@modalContainer]': 'state',\n                    '(@modalContainer.start)': 'onAnimationStart($event)',\n                    '(@modalContainer.done)': 'onAnimationDone($event)',\n                    '(click)': 'onContainerClick($event)',\n                    '(mouseup)': 'onMouseup()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.OverlayRef }, { type: ɵngcc3.NzConfigService }, { type: ModalOptions }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }], modalElementRef: [{\n            type: ViewChild,\n            args: ['modalElement', { static: true }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc3.NzConfigService }, { type: NzModalService, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc13.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalContentDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nzModalContent]',\n                exportAs: 'nzModalContent'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalFooterDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nzModalFooter]',\n                exportAs: 'nzModalFooter'\n            }]\n    }], function () { return [{ type: NzModalRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.TemplateRef }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalTitleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nzModalTitle]',\n                exportAs: 'nzModalTitle'\n            }]\n    }], function () { return [{ type: NzModalRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.TemplateRef }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-modal',\n                exportAs: 'nzModal',\n                template: `\n    <ng-template><ng-content></ng-content></ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: NzModalService }, { type: ɵngcc0.ViewContainerRef }]; }, { nzVisible: [{\n            type: Input\n        }], nzClosable: [{\n            type: Input\n        }], nzOkLoading: [{\n            type: Input\n        }], nzOkDisabled: [{\n            type: Input\n        }], nzCancelDisabled: [{\n            type: Input\n        }], nzCancelLoading: [{\n            type: Input\n        }], nzKeyboard: [{\n            type: Input\n        }], nzNoAnimation: [{\n            type: Input\n        }], nzCentered: [{\n            type: Input\n        }], nzZIndex: [{\n            type: Input\n        }], nzWidth: [{\n            type: Input\n        }], nzCloseIcon: [{\n            type: Input\n        }], nzOkType: [{\n            type: Input\n        }], nzOkDanger: [{\n            type: Input\n        }], nzIconType: [{\n            type: Input\n        }], nzModalType: [{\n            type: Input\n        }], nzAutofocus: [{\n            type: Input\n        }], nzOnOk: [{\n            type: Input\n        }, {\n            type: Output\n        }], nzOnCancel: [{\n            type: Input\n        }, {\n            type: Output\n        }], nzAfterOpen: [{\n            type: Output\n        }], nzAfterClose: [{\n            type: Output\n        }], nzVisibleChange: [{\n            type: Output\n        }], modalTitle: [{\n            type: ContentChild,\n            args: [NzModalTitleDirective, { static: true, read: TemplateRef }]\n        }], modalFooter: [{\n            type: ContentChild,\n            args: [NzModalFooterDirective, { static: true, read: TemplateRef }]\n        }], nzTitle: [{\n            type: Input\n        }], nzFooter: [{\n            type: Input\n        }], nzMask: [{\n            type: Input\n        }], nzMaskClosable: [{\n            type: Input\n        }], nzCloseOnNavigation: [{\n            type: Input\n        }], nzContent: [{\n            type: Input\n        }], nzComponentParams: [{\n            type: Input\n        }], nzWrapClassName: [{\n            type: Input\n        }], nzClassName: [{\n            type: Input\n        }], nzStyle: [{\n            type: Input\n        }], nzMaskStyle: [{\n            type: Input\n        }], nzBodyStyle: [{\n            type: Input\n        }], nzOkText: [{\n            type: Input\n        }], nzCancelText: [{\n            type: Input\n        }], contentTemplateRef: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], contentFromContentChild: [{\n            type: ContentChild,\n            args: [NzModalContentDirective, { static: true, read: TemplateRef }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalCloseComponent {\n    constructor(config) {\n        this.config = config;\n    }\n}\nNzModalCloseComponent.ɵfac = function NzModalCloseComponent_Factory(t) { return new (t || NzModalCloseComponent)(ɵngcc0.ɵɵdirectiveInject(ModalOptions)); };\nNzModalCloseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzModalCloseComponent, selectors: [[\"button\", \"nz-modal-close\", \"\"]], hostAttrs: [\"aria-label\", \"Close\", 1, \"ant-modal-close\"], exportAs: [\"NzModalCloseBuiltin\"], attrs: _c2, decls: 2, vars: 1, consts: [[1, \"ant-modal-close-x\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 1, \"ant-modal-close-icon\", 3, \"nzType\"]], template: function NzModalCloseComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzModalCloseComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzCloseIcon);\n    } }, directives: [ɵngcc8.NzStringTemplateOutletDirective, ɵngcc6.ɵNzTransitionPatchDirective, ɵngcc7.NzIconDirective], encapsulation: 2, changeDetection: 0 });\nNzModalCloseComponent.ctorParameters = () => [\n    { type: ModalOptions }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalCloseComponent, [{\n        type: Component,\n        args: [{\n                selector: 'button[nz-modal-close]',\n                exportAs: 'NzModalCloseBuiltin',\n                template: `\n    <span class=\"ant-modal-close-x\">\n      <ng-container *nzStringTemplateOutlet=\"config.nzCloseIcon; let closeIcon\">\n        <i nz-icon [nzType]=\"closeIcon\" class=\"ant-modal-close-icon\"></i>\n      </ng-container>\n    </span>\n  `,\n                host: {\n                    class: 'ant-modal-close',\n                    'aria-label': 'Close'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ModalOptions }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalFooterComponent {\n    constructor(i18n, config) {\n        this.i18n = i18n;\n        this.config = config;\n        this.buttonsFooter = false;\n        this.buttons = [];\n        this.cancelTriggered = new EventEmitter();\n        this.okTriggered = new EventEmitter();\n        this.destroy$ = new Subject();\n        if (Array.isArray(config.nzFooter)) {\n            this.buttonsFooter = true;\n            this.buttons = config.nzFooter.map(mergeDefaultOption);\n        }\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Modal');\n        });\n    }\n    onCancel() {\n        this.cancelTriggered.emit();\n    }\n    onOk() {\n        this.okTriggered.emit();\n    }\n    /**\n     * Returns the value of the specified key.\n     * If it is a function, run and return the return value of the function.\n     */\n    getButtonCallableProp(options, prop) {\n        const value = options[prop];\n        const componentInstance = this.modalRef.getContentComponent();\n        return typeof value === 'function' ? value.apply(options, componentInstance && [componentInstance]) : value;\n    }\n    /**\n     * Run function based on the type and set its `loading` prop if needed.\n     */\n    onButtonClick(options) {\n        const loading = this.getButtonCallableProp(options, 'loading');\n        if (!loading) {\n            const result = this.getButtonCallableProp(options, 'onClick');\n            if (options.autoLoading && isPromise(result)) {\n                options.loading = true;\n                result.then(() => (options.loading = false)).catch(() => (options.loading = false));\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzModalFooterComponent.ɵfac = function NzModalFooterComponent_Factory(t) { return new (t || NzModalFooterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NzI18nService), ɵngcc0.ɵɵdirectiveInject(ModalOptions)); };\nNzModalFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzModalFooterComponent, selectors: [[\"div\", \"nz-modal-footer\", \"\"]], hostAttrs: [1, \"ant-modal-footer\"], inputs: { modalRef: \"modalRef\" }, outputs: { cancelTriggered: \"cancelTriggered\", okTriggered: \"okTriggered\" }, exportAs: [\"NzModalFooterBuiltin\"], attrs: _c3, decls: 3, vars: 2, consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultFooterButtons\", \"\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [3, \"innerHTML\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"innerHTML\"], [\"nz-button\", \"\", 3, \"hidden\", \"nzLoading\", \"disabled\", \"nzType\", \"nzDanger\", \"nzShape\", \"nzSize\", \"nzGhost\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-button\", \"\", 3, \"hidden\", \"nzLoading\", \"disabled\", \"nzType\", \"nzDanger\", \"nzShape\", \"nzSize\", \"nzGhost\", \"click\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzDanger\", \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzDanger\", \"nzLoading\", \"disabled\", \"click\"]], template: function NzModalFooterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzModalFooterComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzModalFooterComponent_ng_template_1_Template, 2, 2, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.nzFooter)(\"ngIfElse\", _r1);\n    } }, directives: [ɵngcc5.NgIf, ɵngcc8.NzStringTemplateOutletDirective, ɵngcc5.NgForOf, ɵngcc10.NzButtonComponent, ɵngcc11.NzWaveDirective, ɵngcc6.ɵNzTransitionPatchDirective], encapsulation: 2 });\nNzModalFooterComponent.ctorParameters = () => [\n    { type: NzI18nService },\n    { type: ModalOptions }\n];\nNzModalFooterComponent.propDecorators = {\n    cancelTriggered: [{ type: Output }],\n    okTriggered: [{ type: Output }],\n    modalRef: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalFooterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'div[nz-modal-footer]',\n                exportAs: 'NzModalFooterBuiltin',\n                template: `\n    <ng-container *ngIf=\"config.nzFooter; else defaultFooterButtons\">\n      <ng-container *nzStringTemplateOutlet=\"config.nzFooter; context: { $implicit: config.nzComponentParams, modalRef: modalRef }\">\n        <div *ngIf=\"!buttonsFooter\" [innerHTML]=\"config.nzFooter\"></div>\n        <ng-container *ngIf=\"buttonsFooter\">\n          <button\n            *ngFor=\"let button of buttons\"\n            nz-button\n            (click)=\"onButtonClick(button)\"\n            [hidden]=\"!getButtonCallableProp(button, 'show')\"\n            [nzLoading]=\"getButtonCallableProp(button, 'loading')\"\n            [disabled]=\"getButtonCallableProp(button, 'disabled')\"\n            [nzType]=\"button.type!\"\n            [nzDanger]=\"button.danger\"\n            [nzShape]=\"button.shape!\"\n            [nzSize]=\"button.size!\"\n            [nzGhost]=\"button.ghost!\"\n          >\n            {{ button.label }}\n          </button>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #defaultFooterButtons>\n      <button\n        *ngIf=\"config.nzCancelText !== null\"\n        [attr.cdkFocusInitial]=\"config.nzAutofocus === 'cancel' || null\"\n        nz-button\n        (click)=\"onCancel()\"\n        [nzLoading]=\"!!config.nzCancelLoading\"\n        [disabled]=\"config.nzCancelDisabled\"\n      >\n        {{ config.nzCancelText || locale.cancelText }}\n      </button>\n      <button\n        *ngIf=\"config.nzOkText !== null\"\n        [attr.cdkFocusInitial]=\"config.nzAutofocus === 'ok' || null\"\n        nz-button\n        [nzType]=\"config.nzOkType!\"\n        [nzDanger]=\"config.nzOkDanger\"\n        (click)=\"onOk()\"\n        [nzLoading]=\"!!config.nzOkLoading\"\n        [disabled]=\"config.nzOkDisabled\"\n      >\n        {{ config.nzOkText || locale.okText }}\n      </button>\n    </ng-template>\n  `,\n                host: {\n                    class: 'ant-modal-footer'\n                },\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc4.NzI18nService }, { type: ModalOptions }]; }, { cancelTriggered: [{\n            type: Output\n        }], okTriggered: [{\n            type: Output\n        }], modalRef: [{\n            type: Input\n        }] }); })();\nfunction mergeDefaultOption(options) {\n    return Object.assign({ type: null, size: 'default', autoLoading: true, show: true, loading: false, disabled: false }, options);\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalTitleComponent {\n    constructor(config) {\n        this.config = config;\n    }\n}\nNzModalTitleComponent.ɵfac = function NzModalTitleComponent_Factory(t) { return new (t || NzModalTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ModalOptions)); };\nNzModalTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzModalTitleComponent, selectors: [[\"div\", \"nz-modal-title\", \"\"]], hostAttrs: [1, \"ant-modal-header\"], exportAs: [\"NzModalTitleBuiltin\"], attrs: _c5, decls: 2, vars: 1, consts: [[1, \"ant-modal-title\"], [4, \"nzStringTemplateOutlet\"], [3, \"innerHTML\"]], template: function NzModalTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzModalTitleComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzTitle);\n    } }, directives: [ɵngcc8.NzStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });\nNzModalTitleComponent.ctorParameters = () => [\n    { type: ModalOptions }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'div[nz-modal-title]',\n                exportAs: 'NzModalTitleBuiltin',\n                template: `\n    <div class=\"ant-modal-title\">\n      <ng-container *nzStringTemplateOutlet=\"config.nzTitle\">\n        <div [innerHTML]=\"config.nzTitle\"></div>\n      </ng-container>\n    </div>\n  `,\n                host: {\n                    class: 'ant-modal-header'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ModalOptions }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalModule {\n}\nNzModalModule.ɵfac = function NzModalModule_Factory(t) { return new (t || NzModalModule)(); };\nNzModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzModalModule });\nNzModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [NzModalService], imports: [[\n            CommonModule,\n            BidiModule,\n            OverlayModule,\n            NzOutletModule,\n            PortalModule,\n            NzI18nModule,\n            NzButtonModule,\n            NzIconModule,\n            NzPipesModule,\n            NzNoAnimationModule,\n            NzPipesModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzModalModule, { declarations: function () { return [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalCloseComponent, NzModalFooterComponent, NzModalTitleComponent, NzModalTitleDirective, NzModalContainerComponent, NzModalConfirmContainerComponent, NzModalComponent]; }, imports: function () { return [CommonModule,\n        BidiModule,\n        OverlayModule,\n        NzOutletModule,\n        PortalModule,\n        NzI18nModule,\n        NzButtonModule,\n        NzIconModule,\n        NzPipesModule,\n        NzNoAnimationModule,\n        NzPipesModule]; }, exports: function () { return [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalTitleDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzModalModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    BidiModule,\n                    OverlayModule,\n                    NzOutletModule,\n                    PortalModule,\n                    NzI18nModule,\n                    NzButtonModule,\n                    NzIconModule,\n                    NzPipesModule,\n                    NzNoAnimationModule,\n                    NzPipesModule\n                ],\n                exports: [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalTitleDirective],\n                providers: [NzModalService],\n                entryComponents: [NzModalContainerComponent, NzModalConfirmContainerComponent],\n                declarations: [\n                    NzModalComponent,\n                    NzModalFooterDirective,\n                    NzModalContentDirective,\n                    NzModalCloseComponent,\n                    NzModalFooterComponent,\n                    NzModalTitleComponent,\n                    NzModalTitleDirective,\n                    NzModalContainerComponent,\n                    NzModalConfirmContainerComponent,\n                    NzModalComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalLegacyAPI {\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseModalContainerComponent, FADE_CLASS_NAME_MAP, MODAL_MASK_CLASS_NAME, ModalOptions, NZ_CONFIG_MODULE_NAME, NzModalCloseComponent, NzModalComponent, NzModalConfirmContainerComponent, NzModalContainerComponent, NzModalContentDirective, NzModalFooterComponent, NzModalFooterDirective, NzModalLegacyAPI, NzModalModule, NzModalRef, NzModalService, NzModalTitleComponent, NzModalTitleDirective, ZOOM_CLASS_NAME_MAP, applyConfigDefaults, getConfigFromComponent, getValueWithConfig, nzModalAnimations, setContentInstanceParams, throwNzModalContentAlreadyAttachedError, ɵ0 };\n\n//# sourceMappingURL=ng-zorro-antd-modal.js.map","import { Component, OnInit } from '@angular/core';\nimport * as echarts from 'echarts'\n\n@Component({\n  selector: 'app-graph-display',\n  templateUrl: './graph-display.component.html',\n  styleUrls: ['./graph-display.component.scss']\n})\nexport class GraphDisplayComponent implements OnInit {\n  chart;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.chart = echarts.init(document.getElementById('graph'))\n    this.chart.setOption({\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: [150, 230, 224, 218, 135, 147, 260],\n        type: 'line'\n      }]\n    })\n  }\n\n}\n","<div id=\"graph\"></div>\r\n<div id=\"icons\">\r\n  <i nz-icon nzType=\"link\" nzTheme=\"outline\" class=\"icon\"></i>\r\n  <i nz-icon nzType=\"delete\" nzTheme=\"outline\" class=\"icon\"></i>\r\n</div>\r\n\r\n","/*!\n* screenfull\n* v5.1.0 - 2020-12-24\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (element, options) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar onFullScreenEntered = function () {\n\t\t\t\t\tthis.off('change', onFullScreenEntered);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenEntered);\n\n\t\t\t\telement = element || document.documentElement;\n\n\t\t\t\tvar returnPromise = element[fn.requestFullscreen](options);\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\texit: function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tif (!this.isFullscreen) {\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar onFullScreenExit = function () {\n\t\t\t\t\tthis.off('change', onFullScreenExit);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenExit);\n\n\t\t\t\tvar returnPromise = document[fn.exitFullscreen]();\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\ttoggle: function (element, options) {\n\t\t\treturn this.isFullscreen ? this.exit() : this.request(element, options);\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = {isEnabled: false};\n\t\t} else {\n\t\t\twindow.screenfull = {isEnabled: false};\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tisEnabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","import { DOCUMENT } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, QueryList, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** ID used for the body container where all messages are appended. */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/** ID prefix used for each created message element. */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/** Attribute given to each host element that is described by a message element. */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map();\n/** Container for all registered messages. */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document) {\n        this._document = _document;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message);\n            messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        messagesContainer.appendChild(messageElement);\n        messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        const registeredMessage = messageRegistry.get(key);\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer && preExistingContainer.parentNode) {\n                preExistingContainer.parentNode.removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            // We add `visibility: hidden` in order to prevent text in this container from\n            // being searchable by the browser's Ctrl + F functionality.\n            // Screen-readers will still read the description for elements with aria-describedby even\n            // when the description element is not visible.\n            messagesContainer.style.visibility = 'hidden';\n            // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n            // the description element doesn't impact page layout.\n            messagesContainer.classList.add('cdk-visually-hidden');\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /** Deletes the global messages container. */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nAriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && (this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) &&\n            ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element));\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nInteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`);\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild === null || focusableChild === void 0 ? void 0 : focusableChild.focus();\n                return !!focusableChild;\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this.focusTrap.enabled; }\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() { return this._autoCapture; }\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = this._document.activeElement;\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector));\n}\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element, selector) {\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (curr || null);\n}\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/** IE 11 compatible matches implementation. */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        element['msMatchesSelector'](selector);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\nFocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\nConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout(() => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout(() => this.clear(), duration);\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = null;\n        }\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].parentNode.removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\nLiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() { return this._politeness; }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // We can typically distinguish between these faked mousedown events and real mousedown events\n    // using the \"buttons\" property. While real mousedowns will indicate the mouse button that was\n    // pressed (e.g. \"1\" for the left mouse button), faked mousedowns will usually set the property\n    // value to 0.\n    return event.buttons === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) ||\n        (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nconst TOUCH_BUFFER_MS = 650;\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        };\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (event) => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n                // Resolve the focus source to `keyboard` if we detect one of them.\n                const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n                this._setOriginForCurrentEventQueue(source);\n            }\n        };\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (event) => {\n            // Some screen readers will fire a fake `touchstart` event if an element is activated using\n            // the keyboard while on a device with a touchsreen. Consider such events as keyboard focus.\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                // When the touchstart event fires the focus event is not yet in the event queue. This means\n                // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n                // see if a focus happens.\n                if (this._touchTimeoutId != null) {\n                    clearTimeout(this._touchTimeoutId);\n                }\n                this._lastTouchTarget = getTarget(event);\n                this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n            }\n            else if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('keyboard');\n            }\n        };\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n        };\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = getTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement)\n                .forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOriginForCurrentEventQueue(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    _getFocusOrigin(event) {\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (this._origin) {\n            return this._origin;\n        }\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        else if (this._wasCausedByTouch(event)) {\n            return 'touch';\n        }\n        else {\n            return 'program';\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        this._toggleClass(element, 'cdk-focused', !!origin);\n        this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n        this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @param origin The origin to set.\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n            }\n        });\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param event The focus event to check.\n     * @returns Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        const focusTarget = getTarget(event);\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(event), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const document = this._getDocument();\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const document = this._getDocument();\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); };\nFocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8), ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/** Gets the target of an event, accounting for Shadow DOM. */\nfunction getTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n            documentWindow.getComputedStyle(testElement) : null;\n        const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\nHighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); };\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule, ObserversModule]] });\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map"],"sourceRoot":"webpack:///"}